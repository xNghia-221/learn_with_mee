def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        development.resources.srcDirs = ['src/development/']
        production.resources.srcDirs = ['src/production/']
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.learn_with_mee"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    flavorDimensions "flavor"
    productFlavors {
        development {
            dimension "flavor"
            applicationIdSuffix ""
        }
        production {
            dimension "flavor"
            manifestPlaceholders.appNamePrefix = ""
        }
    }

    apply from: 'signingConfigs/development.gradle', to: android
    apply from: 'signingConfigs/production.gradle', to: android

    buildTypes {
        release {
            productFlavors.development.signingConfig signingConfigs.development
            productFlavors.production.signingConfig signingConfigs.production
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def versionCode = defaultConfig.versionCode
            def versionName = defaultConfig.versionName
            def date = new Date().format('yyyyMMdd-HHmm')
            if (variant.buildType.name.contains("debug")) {
                def newName = "${defaultConfig.applicationId}_v$versionName($versionCode)_${date}_${variant.productFlavors[0].name}_debug.apk"
                outputFileName = newName
            }
            if (name.contains("release")) {
                def newName = "${defaultConfig.applicationId}_v$versionName($versionCode)_${date}_${variant.productFlavors[0].name}_release.apk"
                outputFileName = newName
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:31.1.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'
}
